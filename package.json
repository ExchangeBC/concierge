{
  "name": "bcgov-concierge",
  "version": "1.0.0",
  "description": "Concierge Web Application",
  "main": "index.js",
  "scripts": {
    "start": "npm run back-end:start",
    "front-end:lint": "eslint src/front-end --ext .ts && echo Lint Successful",
    "front-end:typecheck": "npx tsc --project src/front-end/typescript --noEmit && echo Typecheck Successful\n",
    "front-end:test": "node tests/front-end/index.js",
    "front-end:build": "npx grunt build",
    "front-end:watch": "npx grunt",
    "front-end:typedoc": "npx typedoc --name 'Concierge Front-End' --tsconfig src/front-end/typescript/tsconfig.json --out typedoc/front-end src/front-end/typescript",
    "back-end:lint": "eslint src/back-end --ext .ts && echo Lint Successful",
    "back-end:typecheck": "npx tsc --project src/back-end && echo Typecheck Successful\n",
    "back-end:test": "node tests/back-end/index.js",
    "back-end:start": "cd src/back-end && npx ts-node --require tsconfig-paths/register --project tsconfig.json index.ts",
    "back-end:watch": "cd src/back-end && npx nodemon --watch . --watch ../shared --ext ts,tsx,json --exec \"ts-node --require tsconfig-paths/register --project tsconfig.json index.ts\"",
    "back-end:typedoc": "npx typedoc --name 'Concierge Back-End' --tsconfig src/back-end/tsconfig.json --out typedoc/back-end src/back-end",
    "shared:typedoc": "npx typedoc --name 'Concierge Shared' --tsconfig src/shared/tsconfig.json --out typedoc/shared src/shared",
    "migrations:create": "npx migrate --chdir migrations --template-file template.ts --migrations-dir migrations create",
    "migrations:up": "cd migrations && npx ts-node --require tsconfig-paths/register --project tsconfig.json index.ts --direction up",
    "migrations:down": "cd migrations && npx ts-node --require tsconfig-paths/register --project tsconfig.json index.ts --direction down",
    "typedoc:build": "npm run back-end:typedoc; npm run front-end:typedoc; npm run shared:typedoc",
    "typedoc:start": "npx serve --config typedoc/serve.json typedoc",
    "docs:readme-toc": "npx markdown-toc -i README.md",
    "docs:functional-spec-toc": "npx markdown-toc --maxdepth 5 -i docs/FUNCTIONAL_SPEC.md",
    "docs:licenses": "npx license-checker > OPEN_SOURCE_LICENSES.txt"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/BCDevExchange/concierge.git"
  },
  "author": "Real Folk Inc.",
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/BCDevExchange/concierge/issues"
  },
  "homepage": "https://github.com/BCDevExchange/concierge",
  "engines": {
    "node": ">=10.9 <14.10"
  },
  "dependencies": {
    "@types/bcrypt": "^3.0.0",
    "@types/cookie-parser": "^1.4.1",
    "@types/express": "^4.16.1",
    "@types/html-to-text": "^1.4.31",
    "@types/immutable": "^3.8.7",
    "@types/lodash": "^4.14.120",
    "@types/mime-types": "^2.1.0",
    "@types/minimist": "^1.2.0",
    "@types/moment": "^2.13.0",
    "@types/multiparty": "0.0.32",
    "@types/node": "^10.12.26",
    "@types/react": "^16.8.19",
    "@types/react-dom": "^16.8.4",
    "bcrypt": "^3.0.4",
    "body-parser": "^1.18.3",
    "bowser": "^2.9.0",
    "chalk": "^2.4.2",
    "cookie-parser": "^1.4.4",
    "express": "^4.16.4",
    "html-to-text": "^4.0.0",
    "immutable": "^4.0.0-rc.12",
    "lodash": "^4.17.14",
    "migrate": "^1.6.2",
    "mime-types": "^2.1.22",
    "minimist": "^1.2.5",
    "moment": "^2.24.0",
    "mongodb": "^3.2.6",
    "mongoose": "^5.13.9",
    "multiparty": "^4.2.1",
    "nodemailer": "^6.7.2",
    "react": "^16.8.6",
    "react-dom": "^16.8.6",
    "ts-node": "^8.0.2",
    "tsconfig-paths": "^3.8.0",
    "typescript": "^3.5.1"
  },
  "devDependencies": {
    "@types/mocha": "^5.2.6",
    "@types/moment-timezone": "^0.5.10",
    "@types/nodemailer": "^6.4.4",
    "@types/page": "^1.8.0",
    "@types/react-select": "^2.0.19",
    "@types/reactstrap": "^7.1.3",
    "@types/sha.js": "^2.4.0",
    "@typescript-eslint/eslint-plugin": "^5.6.0",
    "@typescript-eslint/parser": "^5.6.0",
    "autoprefixer": "^9.4.4",
    "axios": "^0.19.0",
    "bootstrap": "^4.3.1",
    "common-shakeify": "^0.6.2",
    "cssnano": "^4.1.10",
    "dotenv": "^10.0.0",
    "envify": "^4.1.0",
    "eslint": "^8.4.1",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-import": "^2.25.3",
    "grunt": "^1.3.0",
    "grunt-browserify": "^6.0.0",
    "grunt-cli": "^1.3.2",
    "grunt-contrib-clean": "^2.0.0",
    "grunt-contrib-compress": "^2.0.0",
    "grunt-contrib-copy": "^1.0.0",
    "grunt-contrib-htmlmin": "^3.0.0",
    "grunt-contrib-watch": "^1.1.0",
    "grunt-postcss": "^0.9.0",
    "grunt-sass": "^3.0.2",
    "grunt-shell": "^3.0.1",
    "grunt-terser": "^0.1.0",
    "is-relative-url": "^3.0.0",
    "jquery": "^3.5.0",
    "license-checker": "^25.0.1",
    "load-grunt-tasks": "^4.0.0",
    "mocha": "^5.2.0",
    "moment-timezone": "^0.5.23",
    "node-sass": "^4.13.1",
    "nodemon": "^2.0.15",
    "page": "^1.11.3",
    "pathmodify": "^0.5.0",
    "react-markdown": "^4.0.6",
    "react-select": "^3.0.4",
    "reactstrap": "^7.1.0",
    "require-dir": "^1.2.0",
    "serve": "^10.1.2",
    "sha.js": "^2.4.11"
  }
}
